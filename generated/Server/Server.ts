// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdCreated extends ethereum.Event {
  get params(): AdCreated__Params {
    return new AdCreated__Params(this);
  }
}

export class AdCreated__Params {
  _event: AdCreated;

  constructor(event: AdCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get totalFunds(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get AdURI(): string {
    return this._event.parameters[2].value.toString();
  }

  get Advertiser(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class AdServed extends ethereum.Event {
  get params(): AdServed__Params {
    return new AdServed__Params(this);
  }
}

export class AdServed__Params {
  _event: AdServed;

  constructor(event: AdServed) {
    this._event = event;
  }

  get Adid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get publisherId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class CampaignStarted extends ethereum.Event {
  get params(): CampaignStarted__Params {
    return new CampaignStarted__Params(this);
  }
}

export class CampaignStarted__Params {
  _event: CampaignStarted;

  constructor(event: CampaignStarted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CampaignStopped extends ethereum.Event {
  get params(): CampaignStopped__Params {
    return new CampaignStopped__Params(this);
  }
}

export class CampaignStopped__Params {
  _event: CampaignStopped;

  constructor(event: CampaignStopped) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Click extends ethereum.Event {
  get params(): Click__Params {
    return new Click__Params(this);
  }
}

export class Click__Params {
  _event: Click;

  constructor(event: Click) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get PublisherId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PublisherAdded extends ethereum.Event {
  get params(): PublisherAdded__Params {
    return new PublisherAdded__Params(this);
  }
}

export class PublisherAdded__Params {
  _event: PublisherAdded;

  constructor(event: PublisherAdded) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get PublisherId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PublisherCreated extends ethereum.Event {
  get params(): PublisherCreated__Params {
    return new PublisherCreated__Params(this);
  }
}

export class PublisherCreated__Params {
  _event: PublisherCreated;

  constructor(event: PublisherCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get clickReward(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get displayReward(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get publisher(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get url(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class PublisherRemoved extends ethereum.Event {
  get params(): PublisherRemoved__Params {
    return new PublisherRemoved__Params(this);
  }
}

export class PublisherRemoved__Params {
  _event: PublisherRemoved;

  constructor(event: PublisherRemoved) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get PublisherId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get value(): string {
    return this._event.parameters[0].value.toString();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class fundsAdded extends ethereum.Event {
  get params(): fundsAdded__Params {
    return new fundsAdded__Params(this);
  }
}

export class fundsAdded__Params {
  _event: fundsAdded;

  constructor(event: fundsAdded) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get AddedAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class fundsRemoved extends ethereum.Event {
  get params(): fundsRemoved__Params {
    return new fundsRemoved__Params(this);
  }
}

export class fundsRemoved__Params {
  _event: fundsRemoved;

  constructor(event: fundsRemoved) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get RemovedAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Server__IdToCampaignResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: Address;
  value6: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: Address,
    value6: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getTotalFunds(): BigInt {
    return this.value1;
  }

  getCurrentFunds(): BigInt {
    return this.value2;
  }

  getClicks(): BigInt {
    return this.value3;
  }

  getDisplay(): BigInt {
    return this.value4;
  }

  getAdvertiser(): Address {
    return this.value5;
  }

  getCampaignRunning(): boolean {
    return this.value6;
  }
}

export class Server__IdToPublisherResult {
  value0: BigInt;
  value1: string;
  value2: Address;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: string,
    value2: Address,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getUrl(): string {
    return this.value1;
  }

  getPublisher(): Address {
    return this.value2;
  }

  getClickReward(): BigInt {
    return this.value3;
  }

  getDisplayReward(): BigInt {
    return this.value4;
  }
}

export class Server extends ethereum.SmartContract {
  static bind(address: Address): Server {
    return new Server("Server", address);
  }

  AdIdsListByAdvertiser(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "AdIdsListByAdvertiser",
      "AdIdsListByAdvertiser(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_AdIdsListByAdvertiser(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "AdIdsListByAdvertiser",
      "AdIdsListByAdvertiser(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  IdToCampaign(param0: BigInt): Server__IdToCampaignResult {
    let result = super.call(
      "IdToCampaign",
      "IdToCampaign(uint256):(uint256,uint256,uint256,uint256,uint256,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Server__IdToCampaignResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toAddress(),
      result[6].toBoolean()
    );
  }

  try_IdToCampaign(
    param0: BigInt
  ): ethereum.CallResult<Server__IdToCampaignResult> {
    let result = super.tryCall(
      "IdToCampaign",
      "IdToCampaign(uint256):(uint256,uint256,uint256,uint256,uint256,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Server__IdToCampaignResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toAddress(),
        value[6].toBoolean()
      )
    );
  }

  IdToPublisher(param0: BigInt): Server__IdToPublisherResult {
    let result = super.call(
      "IdToPublisher",
      "IdToPublisher(uint256):(uint256,string,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Server__IdToPublisherResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_IdToPublisher(
    param0: BigInt
  ): ethereum.CallResult<Server__IdToPublisherResult> {
    let result = super.tryCall(
      "IdToPublisher",
      "IdToPublisher(uint256):(uint256,string,address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Server__IdToPublisherResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  PublisherAddressToId(param0: Address): BigInt {
    let result = super.call(
      "PublisherAddressToId",
      "PublisherAddressToId(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_PublisherAddressToId(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PublisherAddressToId",
      "PublisherAddressToId(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(account: Address, id: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address, id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(accounts: Array<Address>, ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    accounts: Array<Address>,
    ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  createAd(_AdURI: string, _totalFunds: BigInt): BigInt {
    let result = super.call("createAd", "createAd(string,uint256):(uint256)", [
      ethereum.Value.fromString(_AdURI),
      ethereum.Value.fromUnsignedBigInt(_totalFunds)
    ]);

    return result[0].toBigInt();
  }

  try_createAd(
    _AdURI: string,
    _totalFunds: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createAd",
      "createAd(string,uint256):(uint256)",
      [
        ethereum.Value.fromString(_AdURI),
        ethereum.Value.fromUnsignedBigInt(_totalFunds)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isApprovedForAll(account: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    account: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nativeTokenId(): BigInt {
    let result = super.call("nativeTokenId", "nativeTokenId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nativeTokenId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nativeTokenId",
      "nativeTokenId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  runningCampaignIdsList(param0: BigInt): BigInt {
    let result = super.call(
      "runningCampaignIdsList",
      "runningCampaignIdsList(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_runningCampaignIdsList(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "runningCampaignIdsList",
      "runningCampaignIdsList(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  runningCampaignIdsListByAdvertiser(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "runningCampaignIdsListByAdvertiser",
      "runningCampaignIdsListByAdvertiser(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_runningCampaignIdsListByAdvertiser(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "runningCampaignIdsListByAdvertiser",
      "runningCampaignIdsListByAdvertiser(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  serveAd(_id: BigInt, _publisher: Address, _Advertiser: Address): string {
    let result = super.call(
      "serveAd",
      "serveAd(uint256,address,address):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_id),
        ethereum.Value.fromAddress(_publisher),
        ethereum.Value.fromAddress(_Advertiser)
      ]
    );

    return result[0].toString();
  }

  try_serveAd(
    _id: BigInt,
    _publisher: Address,
    _Advertiser: Address
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "serveAd",
      "serveAd(uint256,address,address):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(_id),
        ethereum.Value.fromAddress(_publisher),
        ethereum.Value.fromAddress(_Advertiser)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  uri(tokenId: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_uri(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SubscribetoPublisherCall extends ethereum.Call {
  get inputs(): SubscribetoPublisherCall__Inputs {
    return new SubscribetoPublisherCall__Inputs(this);
  }

  get outputs(): SubscribetoPublisherCall__Outputs {
    return new SubscribetoPublisherCall__Outputs(this);
  }
}

export class SubscribetoPublisherCall__Inputs {
  _call: SubscribetoPublisherCall;

  constructor(call: SubscribetoPublisherCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _publisher(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SubscribetoPublisherCall__Outputs {
  _call: SubscribetoPublisherCall;

  constructor(call: SubscribetoPublisherCall) {
    this._call = call;
  }
}

export class UnSubscribetoPublisherCall extends ethereum.Call {
  get inputs(): UnSubscribetoPublisherCall__Inputs {
    return new UnSubscribetoPublisherCall__Inputs(this);
  }

  get outputs(): UnSubscribetoPublisherCall__Outputs {
    return new UnSubscribetoPublisherCall__Outputs(this);
  }
}

export class UnSubscribetoPublisherCall__Inputs {
  _call: UnSubscribetoPublisherCall;

  constructor(call: UnSubscribetoPublisherCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _publisher(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UnSubscribetoPublisherCall__Outputs {
  _call: UnSubscribetoPublisherCall;

  constructor(call: UnSubscribetoPublisherCall) {
    this._call = call;
  }
}

export class AddFundsToCampaignCall extends ethereum.Call {
  get inputs(): AddFundsToCampaignCall__Inputs {
    return new AddFundsToCampaignCall__Inputs(this);
  }

  get outputs(): AddFundsToCampaignCall__Outputs {
    return new AddFundsToCampaignCall__Outputs(this);
  }
}

export class AddFundsToCampaignCall__Inputs {
  _call: AddFundsToCampaignCall;

  constructor(call: AddFundsToCampaignCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddFundsToCampaignCall__Outputs {
  _call: AddFundsToCampaignCall;

  constructor(call: AddFundsToCampaignCall) {
    this._call = call;
  }
}

export class CreateAdCall extends ethereum.Call {
  get inputs(): CreateAdCall__Inputs {
    return new CreateAdCall__Inputs(this);
  }

  get outputs(): CreateAdCall__Outputs {
    return new CreateAdCall__Outputs(this);
  }
}

export class CreateAdCall__Inputs {
  _call: CreateAdCall;

  constructor(call: CreateAdCall) {
    this._call = call;
  }

  get _AdURI(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _totalFunds(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateAdCall__Outputs {
  _call: CreateAdCall;

  constructor(call: CreateAdCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreatePublisherCall extends ethereum.Call {
  get inputs(): CreatePublisherCall__Inputs {
    return new CreatePublisherCall__Inputs(this);
  }

  get outputs(): CreatePublisherCall__Outputs {
    return new CreatePublisherCall__Outputs(this);
  }
}

export class CreatePublisherCall__Inputs {
  _call: CreatePublisherCall;

  constructor(call: CreatePublisherCall) {
    this._call = call;
  }

  get _clickReward(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _displayReward(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _url(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreatePublisherCall__Outputs {
  _call: CreatePublisherCall;

  constructor(call: CreatePublisherCall) {
    this._call = call;
  }
}

export class GetAdTokensCall extends ethereum.Call {
  get inputs(): GetAdTokensCall__Inputs {
    return new GetAdTokensCall__Inputs(this);
  }

  get outputs(): GetAdTokensCall__Outputs {
    return new GetAdTokensCall__Outputs(this);
  }
}

export class GetAdTokensCall__Inputs {
  _call: GetAdTokensCall;

  constructor(call: GetAdTokensCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class GetAdTokensCall__Outputs {
  _call: GetAdTokensCall;

  constructor(call: GetAdTokensCall) {
    this._call = call;
  }
}

export class RemoveFundsFromCampaignCall extends ethereum.Call {
  get inputs(): RemoveFundsFromCampaignCall__Inputs {
    return new RemoveFundsFromCampaignCall__Inputs(this);
  }

  get outputs(): RemoveFundsFromCampaignCall__Outputs {
    return new RemoveFundsFromCampaignCall__Outputs(this);
  }
}

export class RemoveFundsFromCampaignCall__Inputs {
  _call: RemoveFundsFromCampaignCall;

  constructor(call: RemoveFundsFromCampaignCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveFundsFromCampaignCall__Outputs {
  _call: RemoveFundsFromCampaignCall;

  constructor(call: RemoveFundsFromCampaignCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class ServeAdCall extends ethereum.Call {
  get inputs(): ServeAdCall__Inputs {
    return new ServeAdCall__Inputs(this);
  }

  get outputs(): ServeAdCall__Outputs {
    return new ServeAdCall__Outputs(this);
  }
}

export class ServeAdCall__Inputs {
  _call: ServeAdCall;

  constructor(call: ServeAdCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _publisher(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _Advertiser(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ServeAdCall__Outputs {
  _call: ServeAdCall;

  constructor(call: ServeAdCall) {
    this._call = call;
  }

  get adURI(): string {
    return this._call.outputValues[0].value.toString();
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class StartCampaignCall extends ethereum.Call {
  get inputs(): StartCampaignCall__Inputs {
    return new StartCampaignCall__Inputs(this);
  }

  get outputs(): StartCampaignCall__Outputs {
    return new StartCampaignCall__Outputs(this);
  }
}

export class StartCampaignCall__Inputs {
  _call: StartCampaignCall;

  constructor(call: StartCampaignCall) {
    this._call = call;
  }

  get Id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StartCampaignCall__Outputs {
  _call: StartCampaignCall;

  constructor(call: StartCampaignCall) {
    this._call = call;
  }
}

export class StopCampaignCall extends ethereum.Call {
  get inputs(): StopCampaignCall__Inputs {
    return new StopCampaignCall__Inputs(this);
  }

  get outputs(): StopCampaignCall__Outputs {
    return new StopCampaignCall__Outputs(this);
  }
}

export class StopCampaignCall__Inputs {
  _call: StopCampaignCall;

  constructor(call: StopCampaignCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StopCampaignCall__Outputs {
  _call: StopCampaignCall;

  constructor(call: StopCampaignCall) {
    this._call = call;
  }
}

export class TransferClickRewardCall extends ethereum.Call {
  get inputs(): TransferClickRewardCall__Inputs {
    return new TransferClickRewardCall__Inputs(this);
  }

  get outputs(): TransferClickRewardCall__Outputs {
    return new TransferClickRewardCall__Outputs(this);
  }
}

export class TransferClickRewardCall__Inputs {
  _call: TransferClickRewardCall;

  constructor(call: TransferClickRewardCall) {
    this._call = call;
  }

  get _adID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _publisher(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferClickRewardCall__Outputs {
  _call: TransferClickRewardCall;

  constructor(call: TransferClickRewardCall) {
    this._call = call;
  }
}
